@page "/counter"

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<progress max="300" style="position:relative;" value="@(currentCount)"></progress>

    @foreach (var proc in procesoUIs)
{
    int index = procesoUIs.IndexOf(proc);

    @if (index == 0)
    {
        <ProcesoUI Id=@proc.Id Color="green" Posicion=@proc.Posicion />
        <ProcesoUI Color="gray" Posicion=proc.Posicion-1/>
    }
    else
    {
        aux = 1;
        @if (procesoUIs[(index - aux)].Id == proc.Id)
        {
            <ProcesoUI Id=@proc.Id Color="green" Posicion=@proc.Posicion />
            <ProcesoUI Color="gray" Posicion=proc.Posicion-1/>
        }
        else
        {
            <br />
           <ProcesoUI Id=@proc.Id Color="green" Posicion=@proc.Posicion />
           <ProcesoUI Color="gray" Posicion=proc.Posicion-1/>
        }
    }
}



@code {
    private double currentCount = 0;
    private int aux = 0;
    List<ProcesoUI> procesoUIs = new List<ProcesoUI>();

    class ProcesoUI
    {
        public string Id { get; set; }
        public int Posicion { get; set; }
    }


    private async Task IncrementCount()
    {
        for (var i = 0; i < 10; i++)
        {
            currentCount = currentCount + 1;
            if (i < 5)
            {
                procesoUIs.Add(new ProcesoUI { Id = "A", Posicion = i });

            }
            else
            {
            procesoUIs.Add(new ProcesoUI { Id = "B", Posicion = i });
                
            }

            
             
            await Task.Delay(1000);
            StateHasChanged();
        }
    }
}
